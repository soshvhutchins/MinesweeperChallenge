// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Minesweeper.Infrastructure.Data;

#nullable disable

namespace Minesweeper.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Minesweeper.Domain.Aggregates.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("BoardColumns")
                        .HasColumnType("INTEGER")
                        .HasColumnName("BoardColumns");

                    b.Property<int>("BoardRows")
                        .HasColumnType("INTEGER")
                        .HasColumnName("BoardRows");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CompletedAt");

                    b.Property<string>("DifficultyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("DifficultyName");

                    b.Property<bool>("IsFirstMove")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<int>("MineCount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MineCount");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerIdValue")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("TEXT")
                        .HasColumnName("PlayerId");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("StartedAt");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlayerIdValue")
                        .HasDatabaseName("IX_Games_PlayerId");

                    b.HasIndex("StartedAt")
                        .HasDatabaseName("IX_Games_StartedAt");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Games_Status");

                    b.ToTable("Games", null, t =>
                        {
                            t.Property("PlayerId")
                                .HasColumnName("PlayerId1");
                        });
                });

            modelBuilder.Entity("Minesweeper.Domain.Aggregates.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("LastLoginAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Players_CreatedAt");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Players_Email");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Players_IsActive");

                    b.HasIndex("LastLoginAt")
                        .HasDatabaseName("IX_Players_LastLoginAt");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("IX_Players_Username");

                    b.ToTable("Players", (string)null);
                });

            modelBuilder.Entity("Minesweeper.Domain.Aggregates.Player", b =>
                {
                    b.OwnsOne("Minesweeper.Domain.Aggregates.PlayerStatistics", "Statistics", b1 =>
                        {
                            b1.Property<Guid>("PlayerId")
                                .HasColumnType("TEXT");

                            b1.Property<TimeSpan>("BestTimeOverall")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT")
                                .HasDefaultValue(new TimeSpan(9223372036854775807))
                                .HasColumnName("StatsBestTimeOverall");

                            b1.Property<string>("DifficultyStats")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("StatsDifficultyStats");

                            b1.Property<int>("GamesLost")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasDefaultValue(0)
                                .HasColumnName("StatsGamesLost");

                            b1.Property<int>("GamesWon")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasDefaultValue(0)
                                .HasColumnName("StatsGamesWon");

                            b1.Property<int>("TotalGames")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasDefaultValue(0)
                                .HasColumnName("StatsTotalGames");

                            b1.Property<TimeSpan>("TotalPlayTime")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT")
                                .HasDefaultValue(new TimeSpan(0, 0, 0, 0, 0))
                                .HasColumnName("StatsTotalPlayTime");

                            b1.HasKey("PlayerId");

                            b1.ToTable("Players");

                            b1.WithOwner()
                                .HasForeignKey("PlayerId");
                        });

                    b.Navigation("Statistics")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
